#include <iostream>
#include <iomanip>
#include <fstream>
#include <cmath>
using namespace std;

//Josiah Light
ofstream fout;
class chart
{
    public:
        void display_p()
        {
           cout << "Date:   Time:   Players:" << endl;
        }
};
 
class time: private chart
{
    public:
    void set_s()
        {
           fout.open("chart.txt"); 
        }
         private: 
        void display_s()
        {
            
    if (input.is_open()) {
        string line;
        while (getline(input, line)) {
            cout << line << endl;
            ptr[size] = line;
            size++;
        }
        input.close();
        }
};

template <class T>
Array<T>::Array()
{
    mCount = 0;
    mData = new T[mCount];
    for (int i = 0; i < mCount; i++)
        mData[i] = 0;
}

template <class T>
Array<T>::~Array()
{
    delete[] mData;
}

template <class T>
T & Array<T>::operator[](const int index)
{
    return mData[index];
}

int main() {
fout.open("chart.txt");
 int size = 0;
cout << "Date:   Time:   Players:" << endl;
    if (input.is_open()) {
        string line;
        while (getline(input, line)) {
            cout << line << endl;
            ptr[size] = line;
            size++;
        }
        input.close();
  fout.close();
	return 0;
};
